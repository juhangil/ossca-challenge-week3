@rendermode InteractiveServer
@using System.Web
@using Aliencube.YouTubeSubtitlesExtractor.Abstractions

@inject IApiClientService ApiClient
@inject IYouTubeVideo youtubeService

<h3>YoutubeSummarizer</h3>

<input id="youtube-link" @bind=inputURL @bind:after=SetYoutubeEmbedPlayer />

<iframe id="ytplayer" type="text/html" width="640" height="360"
        src=@youtubePlayerURL
        frameborder="0"></iframe>

<select id="video-language-code" @bind=videoLanguageCode>
    <option value="en" selected>English</option>
    <option value="ko">Korean</option>
</select>

<select id="summary-language-code" @bind=summaryLanguageCode>
    <option value="en" selected>English</option>
    <option value="ko">Korean</option>
</select>

<button id="summary" @onclick=SummarizeAsync>Summary</button>

<textarea id="result" @bind=summaryResult></textarea>

@code {
    private static readonly string YOUTUBE_EMBED_URL = "https://www.youtube.com/embed/";
    private static readonly string YOUTUBE_EMBED_URL_DEFAULT = string.Empty;

    private string inputURL = string.Empty;
    private string youtubePlayerURL = YOUTUBE_EMBED_URL_DEFAULT;

    private string videoLanguageCode = "en";
    private string summaryLanguageCode = "en";
    private string summaryResult = string.Empty;

    private void SetYoutubeEmbedPlayer()
    {
        var vidId = youtubeService.GetVideoId(inputURL);

        if (!String.IsNullOrEmpty(vidId))
            youtubePlayerURL = YOUTUBE_EMBED_URL + vidId;
        else
            youtubePlayerURL = YOUTUBE_EMBED_URL_DEFAULT;
    }

    private async Task SummarizeAsync()
    {
        try
        {
            var result = await ApiClient.SummarizeAsync(inputURL, videoLanguageCode, summaryLanguageCode);
            summaryResult = result;
        }
        catch (Exception ex)
        {
            summaryResult = ex.Message;
        }
    }
}